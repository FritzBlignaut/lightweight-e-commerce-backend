// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String
  role     Role     @default(CUSTOMER)
  orders   Order[]
  Cart Cart[]
}

model Product {
  id          Int     @id @default(autoincrement())
  name        String
  description String
  price       Float
  stock       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  CartItem CartItem[]
}

model Order {
  id        Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  total     Float
  createdAt DateTime @default(now())
}

model Cart {
  id        String      @id @default(uuid())
  userId    Int
  user      User        @relation(fields: [userId], references: [id])
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  items     CartItem[]
}

model CartItem {
  id        String   @id @default(uuid())
  cartId    String
  productId Int
  quantity  Int      @default(1)
  cart      Cart     @relation(fields: [cartId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
  @@unique([cartId, productId]) // One product per cart
}


enum Role {
  ADMIN
  CUSTOMER
}
